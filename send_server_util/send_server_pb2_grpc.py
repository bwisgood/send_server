# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from send_server_util import send_server_pb2 as send__server__pb2


class SendServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendMessage = channel.unary_unary(
        '/send_server.SendService/SendMessage',
        request_serializer=send__server__pb2.SendMessageParam.SerializeToString,
        response_deserializer=send__server__pb2.SendMessageResponse.FromString,
        )
    self.SendTemplateMessage = channel.unary_unary(
        '/send_server.SendService/SendTemplateMessage',
        request_serializer=send__server__pb2.SendTemplateMessageParam.SerializeToString,
        response_deserializer=send__server__pb2.SendTemplateMessageResponse.FromString,
        )
    self.GetLawyerletter = channel.unary_unary(
        '/send_server.SendService/GetLawyerletter',
        request_serializer=send__server__pb2.GetLawyerLetterParam.SerializeToString,
        response_deserializer=send__server__pb2.GetLawyerLetterRespnse.FromString,
        )


class SendServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SendMessage(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendTemplateMessage(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLawyerletter(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SendServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendMessage': grpc.unary_unary_rpc_method_handler(
          servicer.SendMessage,
          request_deserializer=send__server__pb2.SendMessageParam.FromString,
          response_serializer=send__server__pb2.SendMessageResponse.SerializeToString,
      ),
      'SendTemplateMessage': grpc.unary_unary_rpc_method_handler(
          servicer.SendTemplateMessage,
          request_deserializer=send__server__pb2.SendTemplateMessageParam.FromString,
          response_serializer=send__server__pb2.SendTemplateMessageResponse.SerializeToString,
      ),
      'GetLawyerletter': grpc.unary_unary_rpc_method_handler(
          servicer.GetLawyerletter,
          request_deserializer=send__server__pb2.GetLawyerLetterParam.FromString,
          response_serializer=send__server__pb2.GetLawyerLetterRespnse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'send_server.SendService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
